# ======================================================================
# TEMPLATE FOR IPS_MASSIVE_SERIA

# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

RUN_ID = ips_massive_serial 

SIM_NAME = ${RUN_ID}

OUTPUT_PREFIX = 
LOG_FILE = ${RUN_ID}.log
LOG_LEVEL = DEBUG

SIM_ROOT = ${PWD}/RUN
INPUT_DIR_SIM = ${PWD}

RUN_COMMENT = massive serial
TAG = 

SIMULATION_MODE = NORMAL

# ======================================================================
# PLASMA STATE SECTION
# ======================================================================

PLASMA_STATE_WORK_DIR = $SIM_ROOT/work/plasma_state

PLASMA_STATE_FILES =   

# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    NAMES = INIT DRIVER 
    POSTS = 

    [[INIT]]
        IMPLEMENTATION = dummy_init 

    [[DRIVER]]
        IMPLEMENTATION = ips_massive_serial

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================

[dummy_init]
    CLASS = fastran
    SUB_CLASS = 
    NAME = dummy_init
    NPROC = 1
    INPUT_DIR = $INPUT_DIR_SIM
    INPUT_FILES = 
    OUTPUT_FILES = 
    RESTART_FILES = 
    SCRIPT = $FASTRAN_ROOT/src/dummy_init.py

[ips_massive_serial]
    CLASS = fastran
    SUB_CLASS = 
    NAME = ips_massive_serial
    BIN_PATH =
    BIN = ips.py
    NPROC = 1
    DASK_NODES = 1
    TASK_PPN = 32
    INPUT_DIR = $INPUT_DIR_SIM
    SIMULATION = $MSR_MODEL_CONFIG
    INSCAN = inscan
    INPUT_FILES = $SIMULATION $INSCAN
    SUMMARY = $PWD/output
    OUTPUT_FILES = 
    RESTART_FILES = 
    SCRIPT = $FASTRAN_ROOT/src/ips_massive_serial.py
    CLEAN_AFTER = 1
    TIME_OUT = 1800
    # Shifter Temporary Xfs Files to use, should be the mount point in the
    # container from the volume parameter, e.g. /tmp in
    # #SBATCH --volume="/global/cscratch1/sd/<username>/tmpfiles:/tmp:perNodeCache=size=1G"
    TMPXFS = /tmp
    # The interval at which ips_continuous_copy.sh will check if ips
    # has finished running. Default is 10
    CHECK_INTERVAL =
    # The interval at which ips_continuous_copy.sh will create tar
    # archives while running, if set to 0 than it will only create the
    # archieve at the end. Default is 300
    TAR_INTERVAL =
    # These will be the files that get included in the tar archive.
    # Default is "SUMMARY run?????.log run?????.out run?????.config ips_?????.log ipslog.?????"
    FILES_TO_ARCHIVE =
