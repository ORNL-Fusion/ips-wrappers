# ======================================================================
# PLATFORM OVERRIDE SECTION
# ======================================================================

#  Hello world does not require these URLs
PORTAL_URL = http://localhost
RUNID_URL  = http://localhost

# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

SIM_NAME = massive_serial_runner
SIM_ROOT = $PWD

LOG_FILE = log.warning

SIMULATION_MODE = NORMAL
RUN_COMMENT = This is a vmec test case.

#  Change to "quiet" to hide output.
#  Change to "verbose" to show all output.
OUTPUT_LEVEL = quiet

#  Size of batch to generate.
BATCH_SIZE = 32

# ======================================================================
# Constraint SECTION
# ======================================================================

#  Path and module for contrains
MODULE_PATH =
MODULE_NAME =

# ======================================================================
# PLASMA STATE SECTION
# ======================================================================

STATE_WORK_DIR = $SIM_ROOT/work/plasma_state

CURRENT_MSR_STATE = current_msr_state.zip

STATE_FILES = $CURRENT_MSR_STATE

# ======================================================================
# Input File SECTION
# ======================================================================

# Config and platform file for the massive serial launcher.
MSR_PLATFORM_FILE = cori_haswell_node.conf
MSR_GLOBAL_CONFIG = ips_massive_serial_global_shifter.config
MSR_CONFIG = ips_massive_serial_shifter.config

# Config file for the massive serial workflow model.
MSR_MODEL_CONFIG = fastran_modeleq.config

# New Batch of inputs to the run the massive serial workflow on.
CURRENT_BATCH = new_data.json

# Config file to convert the massive serial output to a database file.
DATABASE_CONFIG = makedb.json

# Config file for inital random sampling of the input parameter space.
INSCAN_CONFIG = sample.json

# Inputs can either be specified as a previuos state file, or individual input
# files.
USER_INPUT_FILES = $MSR_MODEL_CONFIG $DATABASE_CONFIG $INSCAN_CONFIG $MSR_PLATFORM_FILE $MSR_CONFIG $MSR_GLOBAL_CONFIG input.zip
#USER_INPUT_FILES = $CURRENT_MSR_STATE

# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    # The order here is the order in which they are run.

    NAMES = DRIVER INIT MSR

    # Required ports - DRIVER and INIT   

    [[DRIVER]]
        IMPLEMENTATION = massive_serial_runner_driver

    [[INIT]]
        IMPLEMENTATION = massive_serial_runner_init

    [[MSR]]
        IMPLEMENTATION = massive_serial_runner

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================

[massive_serial_runner_driver]
    CLASS = driver
    SUB_CLASS =
    INPUT_FILES =
    NAME = massive_serial_runner_driver
    NPROC = 1
    BIN_PATH =
    SCRIPT =
    MODULE = massive_serial_runner.massive_serial_runner_driver
    STATE_FILES = $CURRENT_MSR_STATE
    OUTPUT_FILES = $CURRENT_MSR_STATE

[massive_serial_runner_init]
    CLASS = workers
    SUB_CLASS =
    NAME = massive_serial_runner_init
    NPROC = 1
    BIN_PATH =
    SCRIPT =
    MODULE = massive_serial_runner.massive_serial_runner_init
    INPUT_FILES = $USER_INPUT_FILES
    STATE_FILES = $CURRENT_MSR_STATE
    OUTPUT_FILES =
    SAMPLE_EXE = $PYTHON $SAMPLE_INSTALL_PATH/$SAMPLE_INSTALL_NAME

[massive_serial_runner]
    CLASS = workers
    SUB_CLASS =
    INPUT_FILES =
    NAME = massive_serial_runner
    NPROC = 1
    BIN_PATH =
    SCRIPT =
    MODULE = massive_serial_runner.massive_serial_runner
    STATE_FILES = $CURRENT_MSR_STATE
    OUTPUT_FILES =
    MAKE_DATABASE_EXE = $PYTHON $MAKE_DATABASE_INSTALL_PATH/$MAKE_DATABASE_INSTALL_NAME
    TO_JSON_EXE = $PYTHON $TO_JSON_INSTALL_PATH/$TO_JSON_INSTALL_NAME
