# ======================================================================
# PLATFORM OVERRIDE SECTION
# ======================================================================

#  Hello world does not require these URLs
PORTAL_URL = http://localhost
RUNID_URL  = http://localhost

# ======================================================================
# ROOT LOCATION
# ======================================================================

#  Define the an environment variable for IPS base directory.
IPS_ROOT = $IPS_PATH

# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

SIM_NAME = v3fit
SIM_ROOT = $PWD

LOG_FILE = log.warning

SIMULATION_MODE = NORMAL
RUN_COMMENT = This is a vmec test case.

#  Change to "quiet" to hide output.
#  Change to "verbose" to show all output.
OUTPUT_LEVEL = quiet

# ======================================================================
# STATE SECTION
# ======================================================================

STATE_WORK_DIR = $SIM_ROOT/work/plasma_state

CURRENT_V3FIT_STATE = current_v3fit_state.zip
CURRENT_SIESTA_STATE = current_siesta_state.zip
CURRENT_VMEC_STATE = current_vmec_state.zip

CURRENT_VMEC_NAMELIST = input.current_state.vmec
CURRENT_VMEC_WOUT_FILE = wout_current_state.vmec.nc

CURRENT_V3FIT_NAMELIST = input.current_state.v3fit
CURRENT_V3FIT_RESULT_FILE = result.input.current_state.v3fit.nc

STATE_FILES = $CURRENT_V3FIT_STATE

# ======================================================================
# Input File SECTION
# ======================================================================

#  VMEC Input can either be a namelist file or an existing state file.
VMEC_NAMELIST_INPUT = input.test.vmec

VMEC_INPUT_FILES = $VMEC_NAMELIST_INPUT
#VMEC_INPUT_FILES = $CURRENT_VMEC_STATE

#  SIESTA Input can either be a namelist file or an existing state file.
SIESTA_NAMELIST_INPUT = siesta.jcf

SIESTA_INPUT_FILES = $SIESTA_NAMELIST_INPUT
#SIESTA_INPUT_FILES = $CURRENT_SIESTA_STATE

#  V3FIT Input can either be a namelist file or an existing state file.
V3FIT_NAMELIST_INPUT = input.test.v3fit

V3FIT_INPUT_FILES = $V3FIT_NAMELIST_INPUT
#V3FIT_INPUT_FILES = $CURRENT_V3FIT_STATE

#  Either use VMEC and V3FIT or SIESTA, VMEC and V3FIT.
USER_INPUT_FILES = $VMEC_INPUT_FILES $V3FIT_INPUT_FILES
#USER_INPUT_FILES = $VMEC_INPUT_FILES $SIESTA_INPUT_FILES $V3FIT_INPUT_FILES
#USER_INPUT_FILES = $CURRENT_V3FIT_STATE

USER_OUTPUT_FILES = $CURRENT_V3FIT_STATE

# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    # The order here is the order in which they are run.

    NAMES = DRIVER INIT V3FIT

    # Required ports - DRIVER and INIT   

    [[DRIVER]]
        IMPLEMENTATION = v3fit_driver

    [[INIT]]
        IMPLEMENTATION = v3fit_init

    [[V3FIT]]
        IMPLEMENTATION = v3fit

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================

[v3fit_driver]
    CLASS = driver
    SUB_CLASS =
    INPUT_FILES =
    NAME = v3fit_driver
    NPROC = 1
    BIN_PATH = $IPS_V3FIT_COMP_PATH
    SCRIPT =
    MODULE = ips_v3fit.v3fit_driver
    STATE_FILES = $CURRENT_V3FIT_STATE
    OUTPUT_FILES = $USER_OUTPUT_FILES

[v3fit_init]
    CLASS = workers
    SUB_CLASS =
    NAME = v3fit_init
    NPROC = 1
    BIN_PATH = $IPS_V3FIT_COMP_PATH
    SCRIPT =
    MODULE = ips_v3fit.v3fit_init
    INPUT_FILES = $USER_INPUT_FILES
    STATE_FILES = $CURRENT_V3FIT_STATE
    OUTPUT_FILES =

[v3fit]
    CLASS = workers
    SUB_CLASS =
    INPUT_FILES =
    NAME = v3fit
    NPROC = 4
    V3FIT_EXE = $V3FIT_INSTALL_PATH/$V3FIT_INSTALL_NAME
    BIN_PATH = $IPS_V3FIT_COMP_PATH
    SCRIPT =
    MODULE = ips_v3fit.v3fit
    STATE_FILES = $CURRENT_V3FIT_STATE
    OUTPUT_FILES =
