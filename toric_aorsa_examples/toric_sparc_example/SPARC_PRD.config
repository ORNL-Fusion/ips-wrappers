# ======================================================================
# USER DATA SECTION
# ======================================================================

USER_W3_DIR = $PWD/www
USER_W3_BASEURL = 
USER = sfrnk

# ======================================================================
# ROOT LOCATION
# ======================================================================

IPS_ROOT = $IPS_DIR
IPS_COMPONENTS_ROOT = $IPS_ROOT/ips-wrappers

# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

RUN_ID = TORIC_SPARC_PRD
RUN_COMMENT = SPARC PRD w/ non-Max ions
TOKAMAK_ID = SPARC
SHOT_NUMBER = 0
SIM_NAME = TORIC_SPARC_PRD

OUTPUT_PREFIX =
LOG_FILE = log.warning
LOG_LEVEL = WARNING

SIM_ROOT = $PWD
SIM_INPUT_DIR= $PWD/_inputs
SIM_EXEC_DIR = $PWD/_exec

SIMULATION_MODE = NORMAL # NORMAL or RESTART
RESTART_TIME = LATEST  # Float or LATEST
RESTART_ROOT = $SIM_ROOT

# ======================================================================
# GLOBAL SIM. CONFIG. PARAMS.
# ======================================================================

ENORM = 2500.0         #(keV) max FP energy for minority spec.
SPECS = MIN+           #determines which species get FP'd (MIN or MIN+) 
RFPWR_IC = 10000000.0  #ICRF power
NSURF_FP = 60          #number of FP'd surfaces (eqspaced in rho)
RHO_FPLO = 0.01        #lowest rho surface
RHO_FPHI = 0.95        #highest rho surface
PWRSCALE = TRUE        #power rescaling

#Optional params
#ICRF_NSRC = 1          #number of icrf sources (if multiple antennas w/ different freq/nphi spec, if multiple antenna w/ same freq/nphi spec handle through toric)
#ICRF_MINFRAC = 0.01 	#minority fraction override for init from existing state/gacode
#ICRF_SPECFILE = 'None' #put filename here and add to initializer input if nphi spectrum avail.

# ======================================================================
# PLASMA STATE SECTION
# ======================================================================

# Where to put plasma state files as the simulation evolves
STATE_WORK_DIR = $SIM_ROOT/work/plasma_state
ARCHIVE_STATE_ON_OUTPUT = TRUE

# Config variables defining simulation specific names for plasma state files
CURRENT_STATE = ips-state.nc
CURRENT_EQDSK = ips-eqdsk.geq
CURRENT_CQL = cql3d.nc
CURRENT_GACODE = ips-input.gacode

# List of files that constitute the plasma state
STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_CQL du0u0_input_1 du0u0_input_2 pwrscale.hdf5
PLASMA_STATE_FILES = $STATE_FILES
ALL_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_CQL du0u0_input_1 du0u0_input_2 pwrscale.hdf5

# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    NAMES = INIT DRIVER RF_IC FP

   # Required ports - DRIVER and INIT
   [[INIT]]
      IMPLEMENTATION = gacode_init

   [[DRIVER]]
      IMPLEMENTATION = toric_driver

   # Physics ports
   [[RF_IC]]
      IMPLEMENTATION = toric

   [[FP]]
      IMPLEMENTATION = CQL3D

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================


[gacode_init]
    #Comp. class/name/nproc 
    CLASS = init
    SUB_CLASS =
    NAME = gacode_init
    NPROC = 1
    
    #Wrapper path for comp.
    BIN_PATH = $IPS_COMPONENTS_ROOT/initializers/gacode
    SCRIPT = $BIN_PATH/gacode_init.py

    #Comp. specific options
    INPUT_GACODE_FILE = input.gacode_SPARC_PRD_20220401
    INPUT_EQDSK_FILE = SPARC_PRD_20220401.geq
    ICRF_ANTSPEC_FILE = 0  #tells the initializer to use antenna spectrum file

    #I/O files
    INPUT_DIR = $SIM_INPUT_DIR/gacode_init
    INPUT_FILES = $INPUT_GACODE_FILE $INPUT_EQDSK_FILE
    OUTPUT_FILES = 
    RESTART_FILES = $STATE_FILES
    PLASMA_STATE_FILES = $ALL_STATE_FILES

[toric_driver]
    #Comp. class/name/nproc
    CLASS = driver
    SUB_CLASS = 
    NAME = toric_driver
    NPROC = 1

    #Wrapper path for comp.
    BIN_PATH = $IPS_COMPONENTS_ROOT/toric_cql3d_iterate
    SCRIPT = $BIN_PATH/driver_toric_cql3d_iterate.py

    #Comp. specific options
    INIT_ONLY = FALSE

    #I/O files
    INPUT_DIR =
    INPUT_FILES =
    OUTPUT_FILES =
    RESTART_FILES =
    PLASMA_STATE_FILES = $CURRENT_STATE

[toric]
    #Comp. class/name/nproc
    CLASS = rf
    SUB_CLASS = ic
    NAME = toric
    NPROC = 128
    NPPN = 128
    NPROC_QLDCI = 60
    NPPN_QLDCI = 60
    NPROC_ABJ = 60
    NPPN_ABJ = 60

    #Wrapper path for comp.
    BIN_PATH = $IPS_COMPONENTS_ROOT/toric_cql3d_iterate/ips-toric
    SCRIPT = $BIN_PATH/rf_ic_toric_iterate.py

    #Code executable paths
    TORIC_BIN = /tmp/${USER}_Ptoric
    ABJ_BIN = $ABJ
    GEQXPL_BIN = $GEQXPL

    #Comp. specific options
    TORIC_TIME_LIMIT = 600   #(s) timeout code after this amount of runtime
    DO_PY_PLOTS = 1          #run python plotter script after each step
    FORCE_DEFAULTS = 0       #0/1/2 if you input file has issues run with 1 or 2 

    #I/O files
    INPUT_DIR = $SIM_INPUT_DIR/toric/
    INPUT_FILES =  machine.inp equigs_gen.ind ABJ.inp ABJ_driver.inp
    OUTPUT_FILES = *
    PLASMA_STATE_FILES =  $ALL_STATE_FILES
    RESTART_FILES = $INPUT_FILES $STATE_FILES

[CQL3D]
    #Comp. class/name/nproc
    CLASS = fp
    SUB_CLASS =
    NAME = cql3d
    NPROC = 60
    NPPN = 60

    #Wrapper path for comp.
    BIN_PATH = $IPS_COMPONENTS_ROOT/toric_cql3d_iterate/ips-cql3d
    SCRIPT = $BIN_PATH/fp_cql3d_feedback_pwrscale.py

    #Code executable paths
    CQL3D_BIN = $CQL3D

    #Comp. specific options
    CQL3D_MODE = IC
    CQL3D_NML = cqlinput_template
    NSTEPS_STR = 1 
    DELTAT_STR = 0.0025 #setting to zero turns on special ramped stepping

    #I/O files
    INPUT_DIR = $SIM_INPUT_DIR/cql3d/
    INPUT_FILES = $CQL3D_NML grfont.dat eqdsk
    OUTPUT_FILES = *
    PLASMA_STATE_FILES = $ALL_STATE_FILES
    RESTART_FILES = $INPUT_FILES $STATE_FILES
    
# =============================================================================
# TIMELOOP SECTION
# =============================================================================

[TIME_LOOP]
    MODE = REGULAR #DONT CHANGE THIS TO RESTART OR IT WILL BREAK
    START = 0.0 # Float or $RESTART_TIME
    FINISH = $START + 100. # Float or $RESTART_TIME + float
    NSTEP = 100

# =============================================================================
# CHECKPOINT SECTION
# =============================================================================

[CHECKPOINT]
   MODE = PHYSTIME_REGULAR
   PHYSTIME_INTERVAL = 1.0
   NUM_CHECKPOINT = -1
