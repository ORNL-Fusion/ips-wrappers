# ======================================================================
# PLATFORM OVERRIDE SECTION
# ======================================================================

# HOST = 
# MPIRUN = 
# PHYS_BIN_ROOT =  
# DATA_TREE_ROOT =
# PORTAL_URL = 
# RUNID_URL  = 

# ======================================================================
# USER DATA SECTION
# ======================================================================
USE_PORTAL=False
USER_W3_DIR = $ATOM/www/$USER
USER_W3_BASEURL = http://portal.nersc.gov/project/atom/$USER
PORTAL_URL = http://swim.gat.com:8080/monitor
# ======================================================================
# ROOT LOCATION
# ======================================================================

IPS_ROOT = $IPS_PATH

CASE_PATH=$PWD
INPUT_DIR=$CASE_PATH
BASE_DIR=$SLURM_SUBMIT_DIR
SUBMIT_DIR=$SLURM_SUBMIT_DIR
# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

RUN_ID = myRun
RUN_COMMENT = F this
TOKAMAK_ID = ITER
SHOT_NUMBER = 12345

SIM_NAME = simulationA

OUTPUT_PREFIX =
LOG_LEVEL = INFO # DEBUG | INFO | WARN | ERROR | CRITICAL 

SIM_ROOT = $PWD
SIM_INPUT_DIR= $PWD/_inputs
LOG_FILE = log.ftg
SIMULATION_MODE = NORMAL # NORMAL or RESTART
RESTART_TIME = LATEST # Float or LATEST
RESTART_ROOT = $SIM_ROOT

# ======================================================================
# PLASMA STATE SECTION
# ======================================================================

# Where to put plasma state files as the simulation evolves
PLASMA_STATE_WORK_DIR = $SIM_ROOT/work/plasma_state
ARCHIVE_STATE_ON_OUTPUT = TRUE

# Config variables defining simulation specific names for plasma state files
CURRENT_STATE = ips-state.nc
PRIOR_STATE = ips-state-prior.nc
NEXT_STATE = ips-state-next.nc
CURRENT_EQDSK = ips-eqdsk.geq
CURRENT_CQL = ips-cql.dat
CURRENT_DQL = ips-dql.nc
CURRENT_JSDSK = ips-jsdsk.jso
CURRENT_INSTATE = ips-instate
CURRENT_FASTRAN = ips-fastran.nc
CURRENT_BC = ips-bc.bc

# List of files that constitute the plasma state
PLASMA_STATE_FILES = ftridyn.nc gitrOut.txt gitrFluxEAdist.dat gitrFluxE.dat gitrFluxA.dat
COMPONENT_A_NAMELIST_INPUT = inputEx.txt
# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    # The order here is the order in which they are run.

    NAMES = DRIVER WORKER GWORKER
    # INIT will be run before driver is launched
    # Required ports - DRIVER and INIT   

    [[DRIVER]]
        IMPLEMENTATION = ftridyn_gitr_driver

    #[[INIT]]
    #    IMPLEMENTATION =

    [[WORKER]]
        IMPLEMENTATION = ftridyn_worker

    [[GWORKER]]
        IMPLEMENTATION = gitr_comp
    # Monitor ports

    [[MONITOR]]
        IMPLEMENTATION = monitor_comp

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================

[ftridyn_gitr_driver]
    CLASS = driver
    SUB_CLASS =
    NAME = ftridyn_gitr_driver
    NPROC = 1
    BIN_PATH = $IPS_WRAPPER_PATH
    INPUT_DIR = #$PWD 
    INPUT_FILES =
    OUTPUT_FILES =
    SCRIPT = $IPS_WRAPPER_PATH/drivers/ftridyn_gitr_driver_taskPool.py
    FILENAME = W_W_
    BEAM = W
    TARGET = W
    NH = 100000
    ENERGY = log 0 3 50
    ANGLE = 0 10 20 30 40 50 60 70 80 89.9 #0 30 60 89.9
    ROUGHNESS = 1.0

[ftridyn_driver]
    CLASS = driver
    SUB_CLASS =
    NAME = ftridynDriver
    NPROC = 1
    BIN_PATH = $IPS_WRAPPER_PATH
    INPUT_DIR = #$PWD 
    INPUT_FILES =
    OUTPUT_FILES =
    SCRIPT = $IPS_WRAPPER_PATH/drivers/ftridyn_driver_taskPool.py
    FILENAME = W_W_
    BEAM = W
    TARGET = W
    NH = 100000
    ENERGY = log 0 3 50
    ANGLE = 0 10 20 30 40 50 60 70 80 89.9 #0 30 60 89.9 
    ROUGHNESS = 1.0

[ftridyn_init]
    CLASS = workers
    SUB_CLASS =
    NAME = ftridynInit
    NPROC = 1
    BIN_PATH = $IPS_WRAPPER_PATH
    INPUT_DIR = #$PWD
    INPUT_FILES = 
    OUTPUT_FILES =
    SCRIPT = $IPS_WRAPPER_PATH/ftridyn_ea/source/ftridyn_init.py
    INPUT_SCRIPT =  $FTRIDYN_PATH/utils/generateInputTY.py
    COPY_FILES = He_W0001.IN

[ftridyn_worker]
    CLASS = workers
    SUB_CLASS =
    NAME = ftridynWorker
    NPROC = 1
    BIN_PATH = $FTRIDYN_PATH/src
    FTRIDYN_EXE =$FTRIDYN_PATH/src/shell_FtridynGITR.sh
    INPUT_DIR = /project/projectdirs/atom/users/tyounkin/fractal-tridyn/template/ftridyn_input 
    INPUT_FILES = 
    OUTPUT_FILES = #output.txt
    SCRIPT = $IPS_WRAPPER_PATH/ips-ftridyn/ftridyn_worker_taskPool.py #TEST VALUE: use local copy for tests w/o GITR $SLURM_SUBMIT_DIR/ ; for full runs use path: $IPS_WRAPPER_PATH/ips-ftridyn/
    INPUT_SCRIPT =  $FTRIDYN_PATH/utils/generateInputTY.py
    COPY_FILES = He_W0001.IN
    FTMPI = $GITR_PATH/python/runFT.py
    FTMPI_EXEC = $GITR_PATH/python/runFTexec.py
    FTMPI_NODES = 160
    FTMPI_PPN = 24

[gitr_comp]
    CLASS = workers
    SUB_CLASS =
    NAME = gitr_comp
    NPROC = 160
    TASK_PPN=1
    BIN_PATH = $IPS_WRAPPER_PATH
    INPUT_DIR = $GITR_PATH/pisces/final/highFlux
    GITR_INPUT_DIR = $GITR_PATH/iter/iter_milestone/3d
    NT = 200000
    INPUT_FILES =
    OUTPUT_FILES = gitrOut.txt gitrEAflux.txt
    SCRIPT = $IPS_WRAPPER_PATH/ips-gitr/gitr_comp.py #TEST VALUE: use local copy for tests w/o GITR: $SLURM_SUBMIT_DIR ; for full runs use path:  $IPS_WRAPPER_PATH/ips-gitr/
    GITR_EXE = $GITR_PATH/build/GITR
    BASE_DIR=$SLURM_SUBMIT_DIR
    #GITR_EXE = $GITR_PATH/build/launchGITR.sh

#[fastran_init_from_ps]
## Machine dependent config info
#    FASTRAN_ROOT = $IPS_FASTRAN_DIR
#    BIN_PATH = $PSTOOL_BIN_DIR
#    BIN = $PSTOOL_BIN_NAME
#    SCRIPT = $IPS_FASTRAN_DIR/src/fastran_init_from_ps.py
## Static config info
#    CLASS = init
#    SUB_CLASS =
#    NAME = fastran_init_from_ps
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/existing_ps_init_input
#    INPUT_FILES =
#    OUTPUT_FILES = $CURRENT_EQDSK $CURRENT_BC
#    RESTART_FILES =
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_BC
#    EXISTING_PLASMA_STATE_FILE = $SIM_INPUT_DIR/existing_ps_init_input/diem_tsc_generic_dr_25.000.nc
#
#[fastran_init]
## Machine dependent config info
#    FASTRAN_ROOT = $IPS_FASTRAN_DIR
#    BIN_PATH = $PSTOOL_BIN_DIR
#    BIN = $PSTOOL_BIN_NAME
#    SCRIPT = $IPS_FASTRAN_DIR/src/fastran_init.py
## Static config info
#    CLASS = init
#    SUB_CLASS =
#    NAME = fastran_init
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/fastran_init_input
#    INPUT_FILES = instate innubeam intoric ineqdsk
#    OUTPUT_FILES =
#    RESTART_FILES =
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_BC $PRIOR_STATE $NEXT_STATE $CURRENT_JSDSK
#
#[minimal_state_init]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    SCRIPT = $IPS_WRAPPER_PATH/initializers/minimal-state/minimal_state_init.py
## Static config info
#    CLASS = init
#    SUB_CLASS =
#    NAME = minimal_state_init
#    NPROC = 1
#    INPUT_FILES =
#    OUTPUT_FILES = $CURRENT_STATE
#    RESTART_FILES = $PLASMA_STATE_FILES
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_CQL $CURRENT_DQL $CURRENT_JSDSK $PRIOR_STATE $NEXT_STATE
#
#[mdescr_state_init]
## Machine dependent config info
#    BIN = $IPS_WRAPPER_PATH/initializers/mdescr-init/mdescr_state_init
#    SCRIPT = $IPS_WRAPPER_PATH/initializers/mdescr-init/mdescr_state_init.py
#    MDESCR_FILE = ITER.mdescr
## Static config info
#    CLASS = init
#    SUB_CLASS =
#    NAME = mdescr_state_init
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/mdescr_init_input
#    INPUT_FILES = $MDESCR_FILE
#    OUTPUT_FILES = $CURRENT_STATE
#    RESTART_FILES = $PLASMA_STATE_FILES
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_CQL $CURRENT_DQL $CURRENT_JSDSK $PRIOR_STATE $NEXT_STATE $MDESCR_FILE
#
#[existing_ps_file_init]
## Machine dependent config info
#    BIN =
#    SCRIPT = $IPS_WRAPPER_PATH/initializers/existing-plasmastate/existing_ps_file_init.py
## Static config info
#    CLASS = init
#    SUB_CLASS =
#    NAME = existing_ps_file_init
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/existing_ps_init_input
#    INPUT_STATE_FILE = diem_tsc_generic_dr_25.000.nc
#    INPUT_EQDSK_FILE = diem_tsc_generic_dr_25.000.geq
#    INPUT_FILES = $INPUT_STATE_FILE $INPUT_EQDSK_FILE
#    OUTPUT_FILES = $CURRENT_STATE
#    RESTART_FILES = $PLASMA_STATE_FILES
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $PRIOR_STATE $NEXT_STATE $CURRENT_BC
#
#[basic_time_step_driver]
## Machine dependent config info
#    SCRIPT = $IPS_WRAPPER_PATH/generic-drivers/basic_time_step_driver.py
## Static config info
#    CLASS = driver
#    SUB_CLASS =
#    NAME = basic_time_step_driver
#    NPROC = 1
#    INPUT_FILES =
#    OUTPUT_FILES =
#    RESTART_FILES =
#    PLASMA_STATE_FILES = $CURRENT_STATE
#
# [generic_driver]
## Machine dependent config info
#    SCRIPT = $IPS_CSWIM_WRAPPER_PATH/bin/generic_driver.py
## Static config info
#    CLASS = driver
#    SUB_CLASS =
#    NAME = generic_driver
#    NPROC = 1
#    INPUT_FILES =
#    OUTPUT_FILES =
#    RESTART_FILES =
#    PLASMA_STATE_FILES = $CURRENT_STATE
#
# [fastran_driver]
## Machine dependent config info
#    BIN_PATH = $IPS_FASTRAN_DIR/bin
#    SCRIPT = $IPS_FASTRAN_DIR/src/fastran_driver.py
## Static config info
#    CLASS = fastran
#    SUB_CLASS = driver
#    NAME = fastran_driver
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR
#    INPUT_FILES =
#    OUTPUT_FILES =
#    RESTART_FILES =
#    PLASMA_STATE_FILES =
#
#[TSC]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    TSC_ROOT = /global/u1/f/fpoli/my-TSC-dir/r241
#    TSC_BIN = $TSC_ROOT/gotsc
#    SCRIPT = $IPS_WRAPPER_PATH/ips-tsc/tsc.py
## Static config info
#    CLASS = EPA
#    SUB_CLASS =
#    NAME = tsc
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/tsc_input
#    YEAR = 2014
#    INPUT_SUFFIX = EC
#    INPUT_FILES = input.$INPUT_SUFFIX ITER_SJ.mdescr wall_data
#    OUTPUT_FILES = output.$INPUT_SUFFIX input.$INPUT_SUFFIX log.tsc tsc.cgm.$INPUT_SUFFIX eqdsk.$INPUT_SUFFIX
#    PLASMA_STATE_FILES = $CURRENT_STATE $PRIOR_STATE $NEXT_STATE $CURRENT_EQDSK $CURRENT_JSDSK
#    RESTART_FILES = $INPUT_FILES sprsin.$INPUT_SUFFIX eqdsk.$INPUT_SUFFIX movie.cdf bpmax
#
#[fastran]
## Machine dependent config info
#    FASTRAN_ROOT = $IPS_FASTRAN_DIR
#    BIN_PATH = $FASTRAN_ROOT/bin
#    BIN = xfastran
#    SCRIPT = $FASTRAN_ROOT/src/fastran_solver.py
## Static config info
#    CLASS = EPA
#    SUB_CLASS =
#    NAME = fastran_solver
#    NPROC = 21
#    NPROC_KY = 21
#    INPUT_DIR = $SIM_INPUT_DIR/fastran_input
#    INPUT_FILES = infastran intglf
#    OUTPUT_FILES = fastran.nc inprof inmetric infastran intglf xfastran.log
#    RESTART_FILES =
#
#[rf_ec_genray]
## Machine dependent config info
#    BIN_PATH = $IPS_WRAPPER_PATH/ips-genray
#    GENRAY_BIN = $GENRAY_BIN_DIR/$GENRAY_BIN_NAME
#    ZERO_EC_POWER_BIN = $IPS_WRAPPER_PATH/ips-model-rf/zero_RF_EC_power
#    SCRIPT = $IPS_WRAPPER_PATH/ips-genray/genray.py
## Static config info
#    CLASS = rf
#    SUB_CLASS = ec
#    NAME = genray
#    NPROC = 241
#    RFMODE = EC
#    ISOURCE_STRING = 1
#    GENRAYNML = genray.in_EC
#    ADJ_READ = disabled
#    PS_ADD_NML = disabled
#    INPUT_DIR = $SIM_INPUT_DIR/genray_input
#    INPUT_SUFFIX =
#    INPUT_FILES = genray.in_EC
#    OUTPUT_FILES = genray.in log.genray
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK
#    RESTART_FILES = $INPUT_FILES
#    N_LAUNCHERS_PROGRAMMED = 5
#    LAUNCHER1_TIMES = 0
#    LAUNCHER1_alfast = 140.0
#    LAUNCHER1_betast = 90.0
#    LAUNCHER1_powtot_MW = 0.0
#    LAUNCHER2_TIMES = 0 15 100 250
#    LAUNCHER2_alfast = 220.0 220.0 220.0 205.0
#    LAUNCHER2_betast = 85.0 85.0 95.0 100.0
#    LAUNCHER2_powtot_MW = 0.0 6.7 6.7 6.7
#    LAUNCHER3_TIMES = 0 30 100 175
#    LAUNCHER3_alfast = 219.0 219.0 219.0 210.0
#    LAUNCHER3_betast = 95.0 95.0 85.0 80.0
#    LAUNCHER3_powtot_MW = 0.0 6.7 6.7 0.0
#    LAUNCHER4_TIMES = 0 50
#    LAUNCHER4_alfast = 203.0 203.0
#    LAUNCHER4_betast = 145.0 145.0
#    LAUNCHER4_powtot_MW = 0.0 6.7
#    LAUNCHER5_TIMES = 0 175 250
#    LAUNCHER5_alfast = 205.0 205.0 205.0
#    LAUNCHER5_betast = 149.0 149.0 147.0
#    LAUNCHER5_powtot_MW = 0.0 6.7 6.7
#
#[genray_JM]
## Machine dependent config info
#    FASTRAN_ROOT = $IPS_FASTRAN_DIR
#    SCRIPT = $FASTRAN_ROOT/src/genray.py
#    BIN_PATH = $GENRAY_BIN_DIR
#    BIN = $GENRAY_BIN_NAME
#    PSTOOL_PATH = $PSTOOL_BIN_DIR/$PSTOOL_BIN_NAME
## Static config info
#    CLASS = rf
#    SUB_CLASS = ec
#    NAME = genray
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/genray_input
#    INPUT_FILES = ingenray
#    OUTPUT_FILES = genray.nc xgenray.log
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK
#    RESTART_FILES = $INPUT_FILES $PLASMA_STATE_FILES *.nc
#
#[rf_lh_genray]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    PHYS_BIN_ROOT = /project/projectdirs/m876/phys-bin/
#    GENRAY_BIN = $PHYS_BIN_ROOT/phys/genray/bin/xgenray
#    SCRIPT = $BIN_PATH/rf_genray_LH.py
## Static config info
#    CLASS = rf
#    SUB_CLASS = lh
#    NAME = genray
#    NPROC = 241
#    RFMODE = LH
#    ISOURCE_STRING = 1
#    GENRAYNML = genray.in_LH
#    ADJ_READ = disabled
#    PS_ADD_NML = disabled
#    INPUT_DIR = $SIM_INPUT_DIR/genray_input
#    INPUT_SUFFIX =
#    INPUT_FILES = genray.in_LH
#    OUTPUT_FILES = genray.in log.genray
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_DQL
#    RESTART_FILES = $INPUT_FILES $PLASMA_STATE_FILES
#
#[esc]
## Machine dependent config info
#    FASTRAN_ROOT = $IPS_FASTRAN_DIR
#    BIN_PATH = $ESC_BIN_DIR
#    BIN = $ESC_BIN_NAME
#    WGEQDSK_PATH = $WGEQDSK_BIN_DIR/$WGEQDSK_BIN_NAME
#    SCRIPT = $FASTRAN_ROOT/src/esc.py
## Static config info
#    CLASS = eq
#    SUB_CLASS =
#    NAME = esc
#    NPROC = 1
#    INPUT_DIR = $SIM_INPUT_DIR/esc_input
#    INPUT_FILES =
#    OUTPUT_FILES = geqdsk xesc.log
#    RESTART_FILES = $INPUT_FILES
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_BC
#
#[model_RF_IC]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    SCRIPT = $BIN_PATH/model_RF_IC.py
## Static config info
#    CLASS = rf
#    SUB_CLASS = ic
#    NAME = model
#    NPROC = 1
#    INPUT_DIR = $IPS_CSWIM_WRAPPER_PATH/components/$CLASS/$SUB_CLASS
#    INPUT_FILES = model_RF_IC_input.nml
#    OUTPUT_FILES = $INPUT_FILES
#
#[rf_aorsa]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    PHYS_BIN_ROOT = /project/projectdirs/m876/phys-bin/
#    AORSA_BIN = $PHYS_BIN_ROOT/aorsa2d/bin/xaorsa2d
#    SCRIPT = $BIN_PATH/rf_ic_aorsa.py
## Static config info
#    CLASS = rf
#    SUB_CLASS = ic
#    NAME =  aorsa
#    NPROC = 1024
#    INPUT_DIR = $IPS_CSWIM_WRAPPER_PATH/components/rf/aorsa/ITER
#    INPUT_FILES = grfont.dat ZTABLE.TXT aorsa2d.in_ref iter_aorsa.in_map_1024_128_I09030
#    OUTPUT_FILES = out15 aorsa2d.ps log.arosa out_swim
#
#[rf_toric]
## Machine dependent config info
#    BIN_PATH = $IPS_WRAPPER_PATH/ips-toric
#    TORIC_BIN = $TORIC_BIN_DIR/$TORIC_BIN_NAME
#    GEQXPL_BIN = $GEQXPL_BIN_DIR/$GEQXPL_BIN_NAME
#    ZERO_IC_POWER_BIN = $IPS_WRAPPER_PATH/ips-model-rf/zero_RF_IC_power
#    SCRIPT = $BIN_PATH/rf_ic_toric_abr_mcmd.py
## Static config info
#    CLASS = rf
#    SUB_CLASS = ic
#    NAME = toric
#    MPIRUN = aprun
#    NPROC = 24
#    INPUT_DIR =  $SIM_INPUT_DIR/toric_input
#    INPUT_FILES = machine.inp equigs_gen.ind torica.inp
#    OUTPUT_FILES = torica.inp machine.inp log.toric toric.nc profstat.dat equigs.data equidt.data toric_cfg.nc
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK
#    RESTART_FILES = $INPUT_FILES $PLASMA_STATE_FILES
#
#[minority_model_FP]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    SCRIPT = $BIN_PATH/minority_model_FP_2.py
## Static config info
#    CLASS = fp
#    SUB_CLASS =
#    NAME = minority_model
#    NPROC = 1
#    INPUT_DIR = $IPS_CSWIM_WRAPPER_PATH/components/$CLASS/$SUB_CLASS
#    INPUT_FILES = minority_model_FP.nml
#    OUTPUT_FILES =
#[CQL3D]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    PHYS_BIN_ROOT = /project/projectdirs/m876/phys-bin/
#    CQL3D_BIN = $PHYS_BIN_ROOT/phys/cql3d/bin/xcql3d_mpi.hopper
#    SCRIPT = $BIN_PATH/fp_cql3d_general.py
## Static config info
#    CLASS = fp
#    SUB_CLASS =
#    NAME = cql3d
#    MPIRUN = aprun
#    NPROC = 24
#    CQL3D_MODE = el-only
#    CQL3D_OUTPUT= LH
#    NSTEPS_STR = 50
#    DELTAT_STR = 0.050
#    CQL3D_NML = cqlinput_LH
#    PS_ADD_NML = disabled
#    INPUT_DIR =  $SIM_INPUT_DIR/cql3d_input
#    INPUT_SUFFIX =
#    INPUT_FILES =  cqlinput_LH
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK $CURRENT_DQL
#    RESTART_FILES = $INPUT_FILES cql3d.nc
#    OUTPUT_FILES = cqlinput log.cql3d cql3d.nc cql3d.ps
#
#[NUBEAM]
## Machine dependent config info
#    NUBEAM_BIN = $NUBEAM_BIN_DIR/$NUBEAM_BIN_NAME
#    NUBEAM_UPDATE_BIN = $TRANSP_BIN_DIR/update_state
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    SCRIPT = $BIN_PATH/nb_nubeam.py
## Static config info 
#    CLASS = nb
#    SUB_CLASS =
#    NAME = nubeam
#    MPIRUN = aprun
#    NPROC = 48
#    NSTEP_INT = 1
#    PREACT = $TEMPLATE_DATA_DIR/nubeam/share/PREACT
#    ADAS = $TEMPLATE_DATA_DIR/phys-hopper/nubeam/share/ADAS
#    INPUT_DIR =  $SIM_INPUT_DIR/nubeam_input
#    INPUT_SUFFIX =
#    INPUT_FILES = nubeam_init_files.dat nubeam_step_files.dat nubeam_init_input.dat nubeam_step_input.dat
#    OUTPUT_FILES = log.nubeam log.update_state state_changes.cdf
#    PLASMA_STATE_FILES = $CURRENT_STATE
#    RESTART_FILES = *.cdf *.dat *.RUNID
#    N_BEAMS_PROGRAMMED = 2
#    BEAM1_TIMES = 0.0 75.0
#    BEAM1_POWERS_MW = 0.0 16.5
#    BEAM2_TIMES = 0.0 150.0
#    BEAM2_POWERS_MW = 0.0 16.5
#
#[nubeam_JM]
## Machine dependent config info
#    FASTRAN_ROOT = $IPS_FASTRAN_DIR
#    BIN_PATH = $NUBEAM_BIN_DIR
#    BIN = $NUBEAM_BIN_NAME
#    SCRIPT = $IPS_FASTRAN_DIR/src/nubeam.py
#    PSTOOL_PATH = $PSTOOL_BIN_DIR/$PSTOOL_BIN_NAME
## Static config info 
#    CLASS = nb
#    SUB_CLASS =
#    NAME = nubeam
#    NPROC = 24
#    PREACT = $TEMPLATE_DATA_DIR/nubeam/share/PREACT
#    ADAS = $TEMPLATE_DATA_DIR/nubeam/share/ADAS
#    COPY_PREACT = 1
#    INPUT_DIR = $SIM_INPUT_DIR/nubeam_input
#    INPUT_FILES = innubeam
#    OUTPUT_FILES = log.nubeam log.update_state state_changes.cdf
#    PLASMA_STATE_FILES = $CURRENT_STATE $CURRENT_EQDSK
#    RESTART_FILES = *.cdf *.dat *.RUNID $INPUT_FILES
#[monitor_comp]
## Machine dependent config info
#    BIN_PATH = $IPS_CSWIM_WRAPPER_PATH/bin
#    SCRIPT = $BIN_PATH/monitor_comp.py
## Static config info 
#    CLASS = util
#    SUB_CLASS =
#    NAME = monitor
#    NPROC = 1
#    W3_DIR = $USER_W3_DIR
#    W3_BASEURL = $USER_W3_BASEURL
#    INPUT_DIR = $IPS_CSWIM_WRAPPER_PATH/components/monitor/monitor
#    INPUT_FILES =
#    OUTPUT_FILES = monitor_file.nc $CURRENT_STATE
#    PLASMA_STATE_FILES = $CURRENT_STATE
#    RESTART_FILES = $INPUT_FILES monitor_restart monitor_file.nc

# =============================================================================
# TIMELOOP SECTION
# =============================================================================

[TIME_LOOP]
    MODE = REGULAR
    START = 0 #$RESTART_TIME # Float or $RESTART_TIME 
    FINISH = 1 #$RESTART_TIME + 18.0 # 3.5 # Float or $RESTART_TIME + float 
    NSTEP = 1

# =============================================================================
# CHECKPOINT SECTION
# =============================================================================

[CHECKPOINT]
   MODE = ALL
   PHYSTIME_INTERVAL = 0.5
   NUM_CHECKPOINT = -1
   PROTECT_FREQUENCY = 5
